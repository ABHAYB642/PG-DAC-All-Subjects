package com.demo.test;
import com.demo.service.*;

import java.util.HashMap;
import java.util.Scanner;
import java.util.Set;

public class TestCity {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		TreeCity tc=new TreeCityImpl();
		int choice=0;
		do {
		System.out.println("1.Add list of trees for a city\n2. Delete List of a particular city\n 3.Add new entry in treemap check whether city name already exists");
		System.out.println("4.Display all city names and List of trees (Use Iterator and foreach)\n5.Find List of trees for a city\n6. exit\nChoice:");
		choice=sc.nextInt();
		switch(choice) {
		case 1:
			System.out.println("Enter City");
			String city=sc.next();
			boolean status=TreeCityImp.addTrees(city);
			if(status) {
				System.out.println("Added successfully");
			}
			else {
				System.out.println("City Not Found");
			}
			break;
		case 2:
			System.out.println("Enter City");
			city=sc.next();
			status=TreeCityImp.deleteByCity(city);
			if(status) {
				System.out.println("deleted successfully");
			}
			else {
				System.out.println("not found");
			}
			break;
		case 3:
			System.out.println("Enter City");
			city=sc.next();
			status=TreeCityImp.AddTreeCity(city);
			if(status) {
				System.out.println("Added successfully");
			}
			else {
				System.out.println("not found");
			}
			break;
		case 4:
			HashMap<String,Set<String>>AllList = new HashMap<>();
			AllList=TreeCityImp.displayAll();
			if(eset!=null) {
				eset.stream().forEach(System.out::println);
			}
			break;
		case 5:
			System.out.println("enetr id for search");
			 id=sc.nextInt();
			Employee e=eservice.displayById(id);
			if(e!=null) {
				System.out.println(e);
			}
			else {
				System.out.println("not found");
			}
			break;
		case 6:
			Set<Employee> elst=eservice.sortBySalary();
			elst.stream().forEach(System.out::println);
			break;
		case 7:
			elst=eservice.sortByName();
			elst.stream().forEach(System.out::println);
			break;
		case 8:
			System.out.println("How many topmost employees based on salary you want?");
			int n=sc.nextInt();
			Employee[] earr=eservice.getTopNEmployees(n);
			Stream.of(earr).forEach(System.out::println);
			break;	
		case 9:
			sc.close();
			System.out.println("Thank you for visiting....");
			break;
		default:
			System.out.println("wrong choice");
		}
		}while(choice!=9);
	}

	}

}
